name: "Build, Test, Version, Publish"

on:
  push:
    branches: [ main ]

jobs:
  release:
    name: "Build, Test, Publish"
    runs-on: ubuntu-latest

    steps:
      -
        name: "Checkout source code"
        uses: "actions/checkout@v2"
        with:
          ref: ${{ github.ref }}
      -
        name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      -
        name: Update packages
        run: sudo apt update -qq
      - 
        name: Install apt packages
        run: sudo apt-get install -y libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++ xvfb libgles2-mesa-dev libgbm-dev libxxf86vm-dev
      -
        name: Install node dependencies
        run: npm install
      - 
        name: Download test data
        run: wget -O test_data.zip https://github.com/acalcutt/tileserver-gl/releases/download/test_data/test_data.zip
      -
        name: Unzip test data
        run: unzip -q test_data.zip -d test_data
      -
        name: Run tests
        run: xvfb-run --server-args="-screen 0 1024x768x24" npm test
      -
        name: Remove Test Data
        run: rm -R test_data*
      -
        name: "Old Version Number"
        run: cat package.json | grep version
      -
        name: "Automated Version Bump"
        id: version-bump
        uses: "phips28/gh-action-bump-version@master"
        with:
          tag-prefix: 'v'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: "New Version Number"
        run: cat package.json | grep version
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and publish Full Version to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: wifidb/tileserver-gl:latest, wifidb/tileserver-gl:${{steps.version-bump.outputs.newTag}}
      -
        name: Publish to Full Version NPM
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      -
        name: Create Tileserver Light Directory
        run: node publish.js --no-publish
 
      -
        name: Install node dependencies
        run: npm install
        working-directory: ./light
 
      -
        name: Build and publish Light Version to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./light
          file: ./light/Dockerfile
          push: true
          tags: wifidb/tileserver-gl-light:latest, wifidb/tileserver-gl-light:${{steps.version-bump.outputs.newTag}}

      -
        name: Publish to Light Version NPM
        working-directory: ./light
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
